{"version":3,"sources":["components/layout/Header.js","components/pages/Level2.js","algorithm.js","DisplayBox.js","Modal.js","components/textbox.js","App.js","index.js","components/pages/Campus Center Level 1.png","components/pages/Campus Center Level 2.png"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","pic","width","height","resizeMode","Level2","Fragment","src","Campus2","className","alt","Block","priority","length","boothList","this","unusedSpace","Booth","boothID","projectName","boothType","runAlgo","blockList","boothListCopy","returnValue","i","runBlock","boothlist","boothlistcopy","blocklist","blocknum","flag","block","j","booth","runBlock2","checkAllOcuppied","checkBlockOccupied","boothListcopy","push","index","indexOf","splice","DisplayBox","value","props","htmlFor","Component","React","ColoredRect","state","x","y","stroke","strokeWidth","fill","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","cornerRadius","ComplexText","text","fontSize","fontFamily","align","wrap","App","renderFile","fileObj","ExcelRenderer","err","resp","console","log","setState","dataLoaded","cols","rows","algo","block0","block1","block2","block3","block4","block5","block6","fileHandler","event","target","files","fileName","name","slice","lastIndexOf","uploadedFileName","isFormInvalid","onClickHandler","booth0list","booth0listrender","booth1list","booth1listrender","booth2list","booth2listrender","booth3list","booth3listrender","booth4list","booth4listrender","booth5list","booth5listrender","booth6list","booth6listrender","testbooth0","testbooth1","testbooth2","testbooth3","testbooth4","testbooth5","testbooth6","pop","testbooth1render","testbooth2render","openFileBrowser","fileInput","current","click","showModal","show","hideModal","isOpen","testbooth0render","testbooth3render","testbooth4render","testbooth5render","testbooth6render","header","footer","desc","bind","toggle","createRef","exact","path","render","Campus1","type","onChange","class","onClick","data","columns","tableClassName","tableHeaderRowClass","component","m","position","window","innerWidth","innerHeight","styled","p","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f2de116e.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'; \r\n\r\nfunction Header() {\r\n    return (\r\n        <header style ={headerStyle}>\r\n            <h1>Capstone Allocation</h1>\r\n            <Link style={linkStyle} to=\"../../50.003-FrontEnd\"> Level 1</Link> | \r\n            <Link style={linkStyle} to=\"/level2\"> Level 2</Link> | \r\n            <Link style={linkStyle} to=\"/tryme\"> Test</Link> |\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#ffaf',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport Campus2 from './Campus Center Level 2.png';\r\n\r\nfunction Level2() {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <img src={Campus2} style={pic} className=\"Floorplan\" alt=\"floorplan\"/>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nconst pic = {\r\n    width: '800x',\r\n    height: '500px',\r\n    resizeMode: 'contain'\r\n}\r\n\r\nconst alignleft = {\r\n    background: '#0f100',\r\n    color: '#ff',\r\n    borderWidth: '5'\r\n}\r\nconst alignright = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n}\r\n\r\nexport default Level2;","export class Block {\r\n    constructor(priority=\"\", length=\"\", width=\"\", boothList=[]){\r\n        this.priority = priority;\r\n        this.length = length;\r\n        this.width = width;\r\n        this.boothList = boothList;  \r\n        this.unusedSpace = length;\r\n    }\r\n}\r\n\r\nexport class Booth{\r\n    constructor(boothID='', projectName='', boothType='', length = 1, width=1){\r\n        this.boothID = boothID;\r\n        this.projectName = projectName;\r\n        this.boothType = boothType;\r\n        this.length = length;\r\n        this.width = width;\r\n    }\r\n}\r\n\r\nexport var boothTypes = {\r\n    aerospace: 'aerospace',\r\n    transport: 'transport',\r\n    computer: 'computer',\r\n    education: 'education'\r\n}\r\n\r\n\r\nexport function runAlgo(blockList, boothList, boothListCopy){\r\n    \r\n    var returnValue;\r\n    if(blockList.length==0|boothList.length==0|boothListCopy==0){\r\n        return \"empty arrays\";\r\n    }\r\n    for( var i =0; i<blockList.length;i++){\r\n        returnValue=runBlock(blockList[i],boothList,boothListCopy,blockList);  \r\n        if (returnValue=='all booths allocated successfully'|'not enough space to allocated all booths'){\r\n            return returnValue;\r\n        }\r\n    }\r\n    //console.log('check all occupied before');\r\n    returnValue=checkAllOcuppied(boothList,boothListCopy,blockList);\r\n    return returnValue;\r\n    //console.log('check all occupied after');\r\n}\r\n\r\nexport function checkBlockOccupied(block,boothlist,boothlistcopy){\r\n    \r\n    if(boothlist.length==0){\r\n        //console.log('all booths allocated successfully');\r\n        return 'all booths allocated successfully';\r\n    }\r\n    if(block.boothList.length==0){\r\n        return 'there is no fit for this block';\r\n    }\r\n    var flag = false;\r\n    \r\n    for(var j=0;j<boothlist.length;j++){\r\n        var booth = boothlist[j];\r\n        if(block.unusedSpace>=booth.length&& booth.width<=block.width&&block.boothList[block.boothList.length-1].boothType!= booth.boothType){\r\n            flag = true; \r\n            break;\r\n        }\r\n    }\r\n\r\n    if(flag){\r\n        runBlock2(block,boothlist,boothlistcopy);\r\n    }\r\n    return 'block check finished';\r\n}\r\n\r\nexport function checkAllOcuppied(boothlist,boothlistcopy,blocklist){\r\n    \r\n\r\n    if(boothlist.length==0){\r\n        //console.log('all booths allocated successfully');\r\n        return 'all booths allocated successfully';\r\n        \r\n    }\r\n    var flag = false;\r\n    var blocknum;\r\n    for(var i=0;i<blocklist.length;i++){\r\n        var block = blocklist[i];\r\n        for(var j=0;j<boothlist.length;j++){\r\n            var booth = boothlist[j];\r\n            if(blocklist[i].boothList.length!=0){\r\n                if(block.unusedSpace>=booth.length&& booth.width<=block.width&&block.boothList[block.boothList.length-1].boothType!= booth.boothType){\r\n                    flag = true;\r\n                    blocknum = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(flag){\r\n            break;\r\n        }\r\n    }\r\n\r\n    if(flag){\r\n        runBlock2(blocklist[blocknum],boothlist,boothlistcopy);\r\n    }else{\r\n        //console.log('not enough space to allocated all booths');\r\n        return 'not enough space to allocated all booths';\r\n    }\r\n    if(boothlist.length==0){\r\n        //console.log('all booths allocated successfully');\r\n        return 'all booths allocated successfully';\r\n        \r\n    }\r\n\r\n    return \"algo finished\";\r\n}\r\n\r\n\r\nexport function runBlock(block,boothList,boothListcopy){\r\n    if(typeof(block)!='object'||typeof(boothList)!='object'||typeof(boothListcopy)!='object'){\r\n        return 'wrong input type';\r\n    }\r\n    if(boothList.length==0|boothListcopy==0){\r\n        //console.log('all booths allocated successfully');\r\n        return \"all booths allocated successfully\";\r\n    }\r\n    for( var i=0;i<boothListcopy.length;i++){\r\n        var booth = boothListcopy[i];\r\n        //console.log('boothID: '+booth.boothID);\r\n        //console.log('unused space is '+unusedSpace+'  booth length is '+ booth.length );\r\n        //var tempboothlist = [];\r\n\r\n        if (block.unusedSpace >= booth.length) {\r\n            //console.log('booth width '+ booth.width+\" block width \"+ block.width);\r\n            if (booth.width<=block.width) {\r\n                //console.log('hello');\r\n                if(block.boothList.length==0) {\r\n                    block.boothList.push(booth);\r\n\r\n                    const index = boothList.indexOf(booth);\r\n                    if (index > -1) {\r\n                        boothList.splice(index, 1);\r\n                    }\r\n                    block.unusedSpace -= booth.length;\r\n                    //console.log(block.boothList[0].boothID+\"hello world\");\r\n                }else{\r\n\r\n                    if(block.boothList[block.boothList.length-1].boothType!= booth.boothType){\r\n                        block.boothList.push(booth);\r\n\r\n                        const index = boothList.indexOf(booth);\r\n                        if (index > -1) {\r\n                            boothList.splice(index, 1);\r\n                        }\r\n                        block.unusedSpace-=booth.length;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            if(block.unusedSpace < 1){\r\n                break;\r\n            }\r\n        }else if(block.unusedSpace>0){\r\n            continue;\r\n        }else{\r\n            break;\r\n        }\r\n    }\r\n\r\n        for(var i =0; i< block.boothList.length; i++){   //remove those booth that has been allocated\r\n            const index = boothListcopy.indexOf(block.boothList[i]);\r\n            if (index > -1) {\r\n                boothListcopy.splice(index, 1);\r\n            }\r\n            //console.log(boothListcopy.length);\r\n        }\r\n\r\n        checkBlockOccupied(block,boothList,boothListcopy);\r\n\r\n}\r\n\r\nexport function runBlock2( block,  boothList, boothListcopy){\r\n    \r\n    if(boothList.length==0|boothListcopy==0){\r\n        //console.log('all booths allocated successfully');\r\n        return \"all booths allocated successfully\";\r\n    }\r\n\r\n    for(var i=0;i<boothListcopy.length;i++){\r\n        var booth = boothListcopy[i];\r\n        \r\n        if (block.unusedSpace >= booth.length) {\r\n            if (booth.width<=block.width) {\r\n                if(block.boothList.length==0) {\r\n                    block.boothList.push(booth);\r\n                    const index = boothList.indexOf(booth);\r\n                    if (index > -1) {\r\n                        boothList.splice(index, 1);\r\n                    }\r\n                    block.unusedSpace -= booth.length;\r\n                    \r\n                }else{\r\n                    if(block.boothList[block.boothList.length-1].boothType!= booth.boothType){\r\n                        block.boothList.push(booth);\r\n\r\n                        const index = boothList.indexOf(booth);\r\n                        if (index > -1) {\r\n                            boothList.splice(index, 1);\r\n                        }\r\n\r\n                        block.unusedSpace-=booth.length;\r\n                    }\r\n                }\r\n             \r\n            }\r\n            if(block.unusedSpace <= 0){\r\n                break;\r\n            }\r\n        }else if(block.unusedSpace>0){\r\n            continue;\r\n        }else{\r\n            break;\r\n        }\r\n    }\r\n\r\n    for(var i =0; i< block.boothList.length; i++){   //remove those booth that has been allocated\r\n        const index = boothListcopy.indexOf(block.boothList[i]);\r\n        if (index > -1) {\r\n            boothListcopy.splice(index, 1);\r\n        }\r\n        //console.log(boothListcopy.length);\r\n    }\r\n    \r\n    return checkBlockOccupied(block,boothList,boothListcopy);\r\n\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\n//REPLACE AND DELETE THIS ONCE THE DATA IS NO LONGER NEEDED IN MAIN PAGE.\r\n\r\nclass DisplayBox extends Component{\r\n    render(){\r\n        const{value} = this.props;\r\n        return(\r\n            <div>\r\n            <label htmlFor=\"text\">\r\n                {value || \" test \"}\r\n            </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayBox;","\nimport React, { Component }  from 'react';\nexport default class Modal extends React.Component {\n \n\trender() {\n\t\tconst { handleClose, desc, show, header, footer  } = this.props\n\t\tconst showHideClassName = show ? 'show-div' : 'hide-div';\n\t\tconsole.log(this.props);\n      return (\n      \t<div className={showHideClassName}>\n      \t   <div id=\"myModal\" className=\"modal\">\n \n\t\t\t  <div className=\"modal-content\">\n\t\t\t    <div className=\"modal-header\">\n\t\t\t      <span className=\"close\" onClick={this.props.handleClose}>×</span>\n\t\t\t      <h2>{header}</h2>\n\t\t\t    </div>\n\t\t\t    <div className=\"modal-body\">\n\t\t\t    \t<p>{desc}</p> <p>Booth2(project_name,type,width,length,ID)\n                    </p>            \n                </div>\n                <div className=\"modal-footer\"><h3>{footer}</h3></div>               </div>\n \n\t\t\t</div>\n            <div className={showHideClassName}>\n                <div id=\"myModal\" className=\"modal2\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h2>{header}</h2>\n                    </div>\n                    <div className=\"modal-body\">\n                        <p>{desc}</p>\n                    </div>\n                </div>\n                </div>\n                \n            </div>\n            \n \n\t\t</div>\n        \n\t  );\n    }\t\n}","import React,{Component}from 'react';\r\nimport Konva from  'konva';\r\nimport  {Stage, Layer, Rect, Text} from 'react-konva';\r\n\r\nexport class ColoredRect extends React.Component {\r\n  state = {\r\n    x: this.props.x,\r\n    y:this.props.y,\r\n    \r\n        stroke: '#555',\r\n        strokeWidth: 5,\r\n        fill: '#ddd',\r\n        width: this.props.width,\r\n        height: this.props.height,\r\n        shadowColor: 'black',\r\n        shadowBlur: 10,\r\n        shadowOffsetX: 10,\r\n        shadowOffsetY: 10,\r\n        shadowOpacity: 0.2,\r\n        cornerRadius: 10\r\n  };\r\n /* handleClick = () => {\r\n    this.setState({\r\n      color: Konva.Util.getRandomColor()\r\n    });\r\n  };*/\r\n  render() {\r\n    return (\r\n         <Rect\r\n        x={this.state.x}\r\n        y={this.state.y}\r\n        width={this.state.width}\r\n        height={this.props.height}\r\n        stroke={this.state.stroke}\r\n        strokeWidth = {this.state.strokeWidth}\r\n        cornerRadius = {this.state.cornerRadius}\r\n        /*fill={this.state.color}\r\n        shadowBlur={5}\r\n        onClick={this.handleClick}*/\r\n        \r\n      />  \r\n    );\r\n  }\r\n}\r\n\r\nexport class ComplexText extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      stroke: \"black\",\r\n      x: this.props.x,\r\n      y: this.props.y,\r\n      text:\r\n      this.props.text,\r\n      fontSize: 18,\r\n      fontFamily: 'Calibri',\r\n      //fill: '#555',\r\n      width: this.props.width,\r\n      padding: 20,\r\n      align: 'center',\r\n      wrap: \"word\"\r\n    }\r\n    //this.handleClick=this.handleClick.bind(this);\r\n    //this.handleDragStart=this.handleDragStart.bind(this);\r\n    //this.handleDragEnd=this.handleDragEnd.bind(this);\r\n  }\r\n  /*\r\n  handleDragStart(){\r\n    this.setState({fontSize: this.state.fontSize+10});\r\n  }\r\n  handleDragEnd(){\r\n    this.setState({fontSize:this.state.fontSize-10});\r\n  }\r\n  handleClick(){\r\n    this.setState({fontSize:20});\r\n  }*/\r\n\r\n  render(){\r\n    return(\r\n    \r\n      <Text\r\n    x={this.state.x} y={this.state.y} text={this.state.text} fontSize={this.state.fontSize} fontFamily={this.state.fontFamily}\r\n    fill={this.state.fill} width={this.state.width} padding={this.state.padding} align={this.state.align} \r\n    //onClick={this.handleClick} onDragStart={this.handleDragStart}\r\n    //onDragEnd={this.handleDragEnd} draggable='false'\r\n    />\r\n    \r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Header from './components/layout/Header';\r\nimport Level2 from './components/pages/Level2';\r\nimport Campus1 from './components/pages/Campus Center Level 1.png';\r\nimport styled from 'styled-components';\r\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\r\nimport * as algo from './algorithm';\r\nimport DisplayBox from './DisplayBox';\r\nimport Modal from \"./Modal\";\r\nimport {ComplexText,ColoredRect} from './components/textbox';\r\nimport  {Stage, Layer, Rect, Text} from 'react-konva';\r\n\r\n// uuid is for generating id's\r\nimport * as uuid from 'uuid';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      dataLoaded: false,\r\n      isFormInvalid: false,\r\n      rows: null,\r\n      cols: null,\r\n      testbooth0 : [],\r\n      testbooth0render: [],\r\n      testbooth1 : [],\r\n      testbooth1render: [],\r\n      testbooth2 : [],\r\n      testbooth2render: [],\r\n      testbooth3 : [],\r\n      testbooth3render: [],\r\n      testbooth4 : [],\r\n      testbooth4render: [],\r\n      testbooth5 : [],\r\n      testbooth5render: [],\r\n      testbooth6 : [],\r\n      testbooth6render: [],\r\n      show: false,\r\n      header: \"Block1\",\r\n      footer: \"\",\r\n      desc: \"Booth1(project_name,tyoe,width,length,ID)\"\r\n    }\r\n    this.fileHandler = this.fileHandler.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.openFileBrowser = this.openFileBrowser.bind(this);\r\n    this.renderFile = this.renderFile.bind(this);\r\n    this.fileInput = React.createRef();\r\n    this.boothList = [];\r\n    this.boothListCopy = [];\r\n    this.blockList = [];\r\n\r\n  }\r\n  \r\n\r\n  renderFile = (fileObj) => {\r\n    //just pass the fileObj as parameter\r\n    ExcelRenderer(fileObj, (err, resp) => {\r\n      if(err){\r\n        console.log(err);            \r\n      }\r\n      else{\r\n        this.setState({\r\n          dataLoaded: true,\r\n          cols: resp.cols,\r\n          rows: resp.rows\r\n        });\r\n        for (var i = 1; i<this.state.rows.length; i++){\r\n          var Booth = new algo.Booth(this.state.rows[i][0], this.state.rows[i][1], this.state.rows[i][3], this.state.rows[i][6], this.state.rows[i][7]);\r\n          this.boothList.push(Booth);\r\n          this.boothListCopy.push(Booth);\r\n        }\r\n        var block0 = new algo.Block(0,5,5);\r\n        var block1 = new algo.Block(1,20,3);\r\n        var block2 = new algo.Block(2,25,10);\r\n        var block3 = new algo.Block(3,10,4);\r\n        var block4 = new algo.Block(4,30,2);\r\n        var block5 = new algo.Block(5,20,4);\r\n        var block6 = new algo.Block(6,5,5);\r\n\r\n        // var block0 = new algo.Block(0,2,2);\r\n        // var block1 = new algo.Block(1,2,2);\r\n        // var block2 = new algo.Block(2,3,3);\r\n        // var block3 = new algo.Block(3,3,2);\r\n        // var block4 = new algo.Block(4,3,3);\r\n        // var block5 = new algo.Block(5,2,3);\r\n        // var block6 = new algo.Block(6,2,3);\r\n\r\n        this.blockList.push(block0);\r\n        this.blockList.push(block1);\r\n        this.blockList.push(block2);\r\n        this.blockList.push(block3);\r\n        this.blockList.push(block4);\r\n        this.blockList.push(block5);\r\n        this.blockList.push(block6);\r\n        \r\n      }\r\n    }); \r\n}\r\n\r\nfileHandler = (event) => {    \r\n  if(event.target.files.length){\r\n    let fileObj = event.target.files[0];\r\n    let fileName = fileObj.name;\r\n\r\n    \r\n    //check for file extension and pass only if it is .xlsx and display error message otherwise\r\n    if(fileName.slice(fileName.lastIndexOf('.')+1) === \"xlsx\"){\r\n      this.setState({\r\n        uploadedFileName: fileName,\r\n        isFormInvalid: false\r\n      });\r\n      this.renderFile(fileObj)\r\n    }    \r\n    else{\r\n      this.setState({\r\n        isFormInvalid: true,\r\n        uploadedFileName: \"\"\r\n      })\r\n    }\r\n  }               \r\n}\r\n\r\nonClickHandler = () => {\r\n  var check = algo.runAlgo(this.blockList,this.boothList,this.boothListCopy);\r\n  if(this.boothList.length == 1){\r\n    console.log(\"All allocated\");\r\n    console.log(this.boothList.length);\r\n  }\r\n  else if (this.boothList.length > 1){\r\n    console.log(\"Some booths not allocated\");\r\n    console.log(this.boothList.length);\r\n  }\r\n  var booth0list = [];\r\n  var booth0listrender = [];\r\n  var booth1list = [];\r\n  var booth1listrender = [];\r\n  var booth2list = [];\r\n  var booth2listrender = [];\r\n  var booth3list = [];\r\n  var booth3listrender = [];\r\n  var booth4list = [];\r\n  var booth4listrender = [];\r\n  var booth5list = [];\r\n  var booth5listrender = [];\r\n  var booth6list = [];\r\n  var booth6listrender = [];\r\n  //console.log(this.blockList[0].boothList.length);\r\n    for (var i = 0; i<this.blockList[0].boothList.length; i++){\r\n      booth0list.push(this.blockList[0].boothList[i].projectName);\r\n      booth0listrender.push(booth0list[i]);\r\n      booth0listrender.push(\"|\");\r\n    }\r\n    \r\n  for (var i = 0; i<this.blockList[1].boothList.length; i++){\r\n    booth1list.push(this.blockList[1].boothList[i].projectName);\r\n    booth1listrender.push(booth1list[i]);\r\n    booth1listrender.push(\"<\\br>\");\r\n  }\r\n  for (var i = 0; i<this.blockList[2].boothList.length; i++){\r\n    booth2list.push(this.blockList[2].boothList[i].projectName);\r\n    booth2listrender.push(booth2list[i]);\r\n    booth2listrender.push(\"|\");\r\n  }\r\n  for (var i = 0; i<this.blockList[3].boothList.length; i++){\r\n    booth3list.push(this.blockList[3].boothList[i].projectName);\r\n    booth3listrender.push(booth3list[i]);\r\n    booth3listrender.push(\"|\");\r\n  }\r\n  for (var i = 0; i<this.blockList[4].boothList.length; i++){\r\n    booth4list.push(this.blockList[4].boothList[i].projectName);\r\n    booth4listrender.push(booth4list[i]);\r\n    booth4listrender.push(\"|\");\r\n  }\r\n  for (var i = 0; i<this.blockList[5].boothList.length; i++){\r\n    booth5list.push(this.blockList[5].boothList[i].projectName);\r\n    booth5listrender.push(booth5list[i]);\r\n    booth5listrender.push(\"|\");\r\n  }\r\n  for (var i = 0; i<this.blockList[6].boothList.length; i++){\r\n    booth6list.push(this.blockList[6].boothList[i].projectName);\r\n    booth6listrender.push(booth6list[i]);\r\n    booth6listrender.push(\"|\");\r\n  }\r\n  this.setState({testbooth0 : booth0list});\r\n  this.setState({testbooth1 : booth1list});\r\n  this.setState({testbooth2 : booth2list});\r\n  this.setState({testbooth3 : booth3list});\r\n  this.setState({testbooth4 : booth4list});\r\n  this.setState({testbooth5 : booth5list});\r\n  this.setState({testbooth6 : booth6list});\r\n  booth1listrender.pop();\r\n  booth2listrender.pop();\r\n  this.setState({testbooth1render : booth1listrender});\r\n  this.setState({testbooth2render : booth2list});\r\n}\r\n\r\ntoggle() {\r\n  this.setState({\r\n    isOpen: !this.state.isOpen\r\n  });\r\n}\r\n\r\nopenFileBrowser = () => {\r\n  this.fileInput.current.click();\r\n}\r\n\r\nshowModal = () => {\r\n  this.setState({ show: true });\r\n};\r\n\r\nhideModal = () => {\r\n  this.setState({ show: false });\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className= \"container\">\r\n            <Header/>\r\n            <Route exact path=\"/50.003-FrontEnd\" render={props => (\r\n              <React.Fragment>\r\n                <img src={Campus1} \r\n                className=\"Campus1\" \r\n                alt=\"Campus1\"/>\r\n                <div>\r\n                <input type=\"file\" onChange={this.fileHandler.bind(this)} style={{\"padding\":\"10px\"}}/>\r\n                <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Run Algo</button> \r\n                </div>\r\n                {this.state.dataLoaded && \r\n                <div>\r\n                  <div>\r\n                  <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" />\r\n                  </div>\r\n                </div>\r\n                }\r\n                \r\n                <box component=\"span\" m={1}>\r\n                  <label>Block 0 = </label><DisplayBox value={this.state.testbooth0} />\r\n                  <label>Block 1 = </label><DisplayBox value={this.state.testbooth1} />\r\n                  <label>Block 2 = </label><DisplayBox value={this.state.testbooth2} />\r\n                  <label>Block 3 = </label><DisplayBox value={this.state.testbooth3} />\r\n                  <label>Block 4 = </label><DisplayBox value={this.state.testbooth4} />\r\n                  <label>Block 5 = </label><DisplayBox value={this.state.testbooth5} />\r\n                  <label>Block 6 = </label><DisplayBox value={this.state.testbooth6} />\r\n                </box>\r\n              </React.Fragment>\r\n              \r\n            )} />\r\n\r\n\r\n            <Route path=\"/level2\" component={Level2} />\r\n            <Route exact path=\"/tryme\" render={props => (\r\n              // <React.Fragment>\r\n              //   <div>\r\n              //     <h1>React Modal</h1>\r\n              //     <img src={Campus1} \r\n              //       className=\"Campus1\" \r\n              //       alt=\"Campus1\"\r\n              //       //style={{position: 'absolute'}}\r\n              //       />\r\n                  \r\n              //     <Stage width={window.innerWidth} height={window.innerHeight}>\r\n              //       <Layer>\r\n                    \r\n              //         <ComplexText x={100} y={100} text={this.state.testbooth0} width={500} />\r\n              //         <ColoredRect x={100} y={100} width={500} height={150}/>\r\n\r\n              //         <ComplexText x={100} y={300} text={this.state.testbooth1} width={500} />\r\n              //         <ColoredRect x={100} y={300} width={500} height={150}/>    \r\n\r\n              //         <ComplexText x={100} y={500} text={this.state.testbooth2} width={500} />\r\n              //         <ColoredRect x={100} y={500} width={500} height={150}/> \r\n\r\n              //         <ComplexText x={650} y={100} text={this.state.testbooth3} width={500} />\r\n              //         <ColoredRect x={650} y={100} width={500} height={150}/>\r\n                         \r\n              //         <ComplexText x={650} y={300} text={this.state.testbooth4} width={500} />\r\n              //         <ColoredRect x={650} y={300} width={500} height={150}/> \r\n\r\n              //         <ComplexText x={650} y={500} text={this.state.testbooth5} width={500} />\r\n              //         <ColoredRect x={650} y={500} width={500} height={150}/>   \r\n\r\n              //         <ComplexText x={1200} y={100} text={this.state.testbooth6} width={150} />\r\n              //         <ColoredRect x={1200} y={100} width={200} height={550}/> \r\n\r\n              //       </Layer>\r\n              //     </Stage>\r\n\r\n              //   </div>\r\n              // </React.Fragment>\r\n              <React.Fragment>\r\n              <div>\r\n                <h1>React Modal</h1>\r\n                <img src={Campus1} \r\n              className=\"Campus1\" \r\n              alt=\"Campus1\"\r\n              style={{position:'absolute'}}/>\r\n                \r\n                <Stage width={window.innerWidth} height={window.innerHeight}>\r\n                  <Layer>\r\n                  \r\n                    <ComplexText x={270} y={190} text={this.state.testbooth0} width={380} height={120}/>\r\n                    <ColoredRect x={270} y={190} width={380} height={120}/>\r\n\r\n                    <ComplexText x={130} y={250} text={this.state.testbooth1} width={80} height={80}/>\r\n                    <ColoredRect x={130} y={250} width={80} height={80}/>    \r\n\r\n                    <ComplexText x={210} y={380} text={this.state.testbooth2} width={170} height={130}/>\r\n                    <ColoredRect x={210} y={380} width={170} height={130}/> \r\n\r\n                    <ComplexText x={720} y={240} text={this.state.testbooth3} width={85} height={85}/>\r\n                    <ColoredRect x={720} y={240} width={85} height={85}/>\r\n                       \r\n                    <ComplexText x={400} y={350} text={this.state.testbooth4} width={150} height={130}/>\r\n                    <ColoredRect x={400} y={350} width={150} height={130}/> \r\n\r\n                    <ComplexText x={570} y={365} text={this.state.testbooth5} width={140} height={150}/>\r\n                    <ColoredRect x={570} y={365} width={140} height={150}/>   \r\n\r\n                    <ComplexText x={1200} y={100} text={this.state.testbooth6} width={150} />\r\n                    <ColoredRect x={1200} y={100} width={200} height={550}/> \r\n\r\n                  </Layer>\r\n                </Stage>\r\n\r\n              </div>\r\n            </React.Fragment>\r\n\r\n            )} />\r\n\r\n            \r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}  \r\n\r\nconst HoverText = styled.p\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/Campus Center Level 1.b711c689.png\";","module.exports = __webpack_public_path__ + \"static/media/Campus Center Level 2.0e08ab5b.png\";"],"sourceRoot":""}