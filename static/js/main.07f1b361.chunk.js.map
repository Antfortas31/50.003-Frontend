{"version":3,"sources":["components/pages/floorplan.png","components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/pages/Level2.js","Modal.js","components/pages/tryme.js","algorithm.js","DisplayBox.js","App.js","index.js"],"names":["module","exports","TodoItem","getStyle","background","padding","flex","borderBottom","textDecoration","props","todo","completed","this","id","title","style","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","React","headerStyle","textAlign","linkStyle","Header","to","pic","width","height","resizeMode","alignleft","borderWidth","Level2","Fragment","src","floorplan","className","alt","Modal","desc","handleClose","show","header","footer","showHideClassName","console","log","Block","priority","length","boothList","unusedSpace","Booth","boothID","projectName","boothType","runAlgo","blockList","boothListCopy","returnValue","i","runBlock","boothlist","boothlistcopy","blocklist","blocknum","flag","block","j","booth","runBlock2","checkAllOcuppied","checkBlockOccupied","boothListcopy","push","index","indexOf","splice","DisplayBox","value","htmlFor","App","renderFile","fileObj","ExcelRenderer","err","resp","setState","dataLoaded","cols","rows","state","algo","block1","block2","fileHandler","event","target","files","fileName","name","slice","lastIndexOf","uploadedFileName","isFormInvalid","onClickHandler","booth1list","booth2list","testbooth1","testbooth2","openFileBrowser","fileInput","current","click","showModal","hideModal","isOpen","toggle","createRef","exact","path","render","class","data","columns","tableClassName","tableHeaderRowClass","component","m","styled","p","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.07f1b361.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/floorplan.36437e89.png\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            background: '#f4f4f4',\r\n            padding: '10px',\r\n            flex: '2',\r\n            borderBottom: '1px #ccc dotted', \r\n            textDecoration: this.props.todo.completed ? \r\n            'line-through' : 'none'\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const {id, title } = this.props.todo;\r\n        return (\r\n            <div style = {this.getStyle()}>\r\n                <p>\r\n                    <input type= \"checkbox\" onChange={this.props.markComplete.bind\r\n                    (this, id)} /> {\" \"}\r\n                    {title}\r\n\r\n                    <button onClick={this.props.delTodo.bind(this, id)} \r\n                    style={btnStyle}>x</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n\r\nexport default TodoItem\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Todos extends React.Component {\r\n  \r\n  render() {\r\n    return this.props.todos.map((todo) => (\r\n      <TodoItem key={todo.id} todo = {todo}\r\n      markComplete= {this.props.markComplete}\r\n      delTodo= {this.props.delTodo}/>\r\n    ));\r\n  }\r\n}  \r\n\r\n// PropTypes\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Todos;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'; \r\n\r\nfunction Header() {\r\n    return (\r\n        <header style ={headerStyle}>\r\n            <h1>Capstone Allocation</h1>\r\n            <Link style={linkStyle} to=\"../../50.003-FrontEnd\"> Level 1</Link> | \r\n            <Link style={linkStyle} to=\"/level2\"> Level 2</Link> | \r\n            <Link style={linkStyle} to=\"/tryme\"> Test</Link> |\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#ffaf',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    // [e.target.name] allows for multiple inputs without the need to create many onChange\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    // onSubmit\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // This adds whatever is in the field\r\n        this.props.addTodo(this.state.title);\r\n        // Clears the field\r\n        this.setState({title: ''});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} style={{display: 'flex'}}>\r\n                <input \r\n                    style = {{flex: '10', padding: '5px'}}\r\n                    type=\"text\" \r\n                    name=\"title\" \r\n                    placeholder = \"Add Todo ....\" \r\n                    value={this.state.title}\r\n                    onChange={this.onChange}\r\n                />\r\n                <input\r\n                type = \"submit\"\r\n                value = \"Submit\"\r\n                className = \"btn\"\r\n                style = {{flex: '1'}}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo\r\n","import React from 'react'\r\nimport floorplan from './floorplan.png';\r\n\r\nfunction Level2() {\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <h1>Level 2</h1>\r\n            <div>\r\n                <p style = {alignleft}>\r\n                    This is the TodoList app v1.0.0.\r\n                    It is part of a React crash course\r\n                </p>\r\n                <img src={floorplan} style={pic} className=\"Floorplan\" alt=\"floorplan\"/>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nconst pic = {\r\n    width: '800x',\r\n    height: '500px',\r\n    resizeMode: 'contain'\r\n}\r\n\r\nconst alignleft = {\r\n    background: '#0f100',\r\n    color: '#ff',\r\n    borderWidth: '5'\r\n}\r\nconst alignright = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n}\r\n\r\nexport default Level2;","\nimport React, { Component }  from 'react';\nexport default class Modal extends React.Component {\n \n\trender() {\n\t\tconst { handleClose, desc, show, header, footer  } = this.props\n\t\tconst showHideClassName = show ? 'show-div' : 'hide-div';\n\t\tconsole.log(this.props);\n      return (\n      \t<div className={showHideClassName}>\n      \t   <div id=\"myModal\" className=\"modal\">\n \n\t\t\t  <div className=\"modal-content\">\n\t\t\t    <div className=\"modal-header\">\n\t\t\t      <span className=\"close\" onClick={this.props.handleClose}>×</span>\n\t\t\t      <h2>{header}</h2>\n\t\t\t    </div>\n\t\t\t    <div className=\"modal-body\">\n\t\t\t    \t<p>{desc}</p> <p>Booth2(project_name,type,width,length,ID)\n                    </p>            \n                </div>\n                <div className=\"modal-footer\"><h3>{footer}</h3></div>               </div>\n \n\t\t\t</div>\n            <div className={showHideClassName}>\n                <div id=\"myModal\" className=\"modal2\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h2>{header}</h2>\n                    </div>\n                    <div className=\"modal-body\">\n                        <p>{desc}</p>\n                    </div>\n                </div>\n                </div>\n                \n            </div>\n            \n \n\t\t</div>\n        \n\t  );\n    }\t\n}","import React from 'react'\r\nimport floorplan from './floorplan.png';\r\nimport Modal from '../../Modal';\r\n\r\nfunction tryme() {\r\n\r\n    this.state =  {\r\n        show: false,\r\n        header: \"Block1\",\r\n        footer: \"\",\r\n        desc: \"Booth1(project_name,tyoe,width,length,ID)\"\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n              <h1>React Modal</h1>\r\n              <Modal show={this.state.show} handleClose={this.hideModal} header={this.state.header} footer={this.state.footer} desc={this.state.desc}>\r\n            \r\n              </Modal>\r\n \r\n              <button type=\"button\" onClick={this.showModal}>\r\n                open\r\n              </button>\r\n          </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\nconst pic = {\r\n    width: '800x',\r\n    height: '500px',\r\n    resizeMode: 'contain'\r\n}\r\n\r\nconst alignleft = {\r\n    background: '#0f100',\r\n    color: '#ff',\r\n    borderWidth: '5'\r\n}\r\nconst alignright = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n}\r\n\r\nexport default tryme;","export class Block {\r\n    constructor(priority=\"\", length=5, width=3, boothList=[]){\r\n        this.priority = priority;\r\n        this.length = length;\r\n        this.width = width;\r\n        this.boothList = boothList;  \r\n        this.unusedSpace = length;\r\n    }\r\n}\r\n\r\nexport class Booth{\r\n    constructor(boothID='', projectName='', boothType='', length = 1, width=1){\r\n        this.boothID = boothID;\r\n        this.projectName = projectName;\r\n        this.boothType = boothType;\r\n        this.length = length;\r\n        this.width = width;\r\n    }\r\n}\r\n\r\nexport var boothTypes = {\r\n    aerospace: 'aerospace',\r\n    transport: 'transport',\r\n    computer: 'computer',\r\n    education: 'education'\r\n}\r\n\r\n\r\nexport function runAlgo(blockList, boothList, boothListCopy){\r\n    \r\n    var returnValue;\r\n    if(blockList.length==0|boothList.length==0|boothListCopy==0){\r\n        return \"empty arrays\";\r\n    }\r\n    for( var i =0; i<blockList.length;i++){\r\n        returnValue=runBlock(blockList[i],boothList,boothListCopy,blockList);  \r\n        if (returnValue=='all booths allocated successfully'|'not enough space to allocated all booths'){\r\n            return returnValue;\r\n        }\r\n    }\r\n    //console.log('check all occupied before');\r\n    returnValue=checkAllOcuppied(boothList,boothListCopy,blockList);\r\n    return returnValue;\r\n    //console.log('check all occupied after');\r\n}\r\n\r\nexport function checkBlockOccupied(block,boothlist,boothlistcopy){\r\n    \r\n    if(boothlist.length==0){\r\n        //console.log('all booths allocated successfully');\r\n        return 'all booths allocated successfully';\r\n    }\r\n    if(block.boothList.length==0){\r\n        return 'there is no fit for this block';\r\n    }\r\n    var flag = false;\r\n    \r\n    for(var j=0;j<boothlist.length;j++){\r\n        var booth = boothlist[j];\r\n        if(block.unusedSpace>=booth.length&& booth.width<=block.width&&block.boothList[block.boothList.length-1].boothType!= booth.boothType){\r\n            flag = true; \r\n            break;\r\n        }\r\n    }\r\n\r\n    if(flag){\r\n        runBlock2(block,boothlist,boothlistcopy);\r\n    }\r\n    return 'block check finished';\r\n}\r\n\r\nexport function checkAllOcuppied(boothlist,boothlistcopy,blocklist){\r\n    \r\n\r\n    if(boothlist.length==0){\r\n        //console.log('all booths allocated successfully');\r\n        return 'all booths allocated successfully';\r\n        \r\n    }\r\n    var flag = false;\r\n    var blocknum;\r\n    for(var i=0;i<blocklist.length;i++){\r\n        var block = blocklist[i];\r\n        for(var j=0;j<boothlist.length;j++){\r\n            var booth = boothlist[j];\r\n            if(blocklist[i].boothList.length!=0){\r\n                if(block.unusedSpace>=booth.length&& booth.width<=block.width&&block.boothList[block.boothList.length-1].boothType!= booth.boothType){\r\n                    flag = true;\r\n                    blocknum = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(flag){\r\n            break;\r\n        }\r\n    }\r\n\r\n    if(flag){\r\n        runBlock2(blocklist[blocknum],boothlist,boothlistcopy);\r\n    }else{\r\n        //console.log('not enough space to allocated all booths');\r\n        return 'not enough space to allocated all booths';\r\n    }\r\n    if(boothlist.length==0){\r\n        //console.log('all booths allocated successfully');\r\n        return 'all booths allocated successfully';\r\n        \r\n    }\r\n\r\n    return \"algo finished\";\r\n}\r\n\r\n\r\nexport function runBlock(block,boothList,boothListcopy){\r\n    if(typeof(block)!='object'||typeof(boothList)!='object'||typeof(boothListcopy)!='object'){\r\n        return 'wrong input type';\r\n    }\r\n    if(boothList.length==0|boothListcopy==0){\r\n        //console.log('all booths allocated successfully');\r\n        return \"all booths allocated successfully\";\r\n    }\r\n    for( var i=0;i<boothListcopy.length;i++){\r\n        var booth = boothListcopy[i];\r\n        //console.log('boothID: '+booth.boothID);\r\n        //console.log('unused space is '+unusedSpace+'  booth length is '+ booth.length );\r\n        //var tempboothlist = [];\r\n\r\n        if (block.unusedSpace >= booth.length) {\r\n            //console.log('booth width '+ booth.width+\" block width \"+ block.width);\r\n            if (booth.width<=block.width) {\r\n                //console.log('hello');\r\n                if(block.boothList.length==0) {\r\n                    block.boothList.push(booth);\r\n\r\n                    const index = boothList.indexOf(booth);\r\n                    if (index > -1) {\r\n                        boothList.splice(index, 1);\r\n                    }\r\n                    block.unusedSpace -= booth.length;\r\n                    //console.log(block.boothList[0].boothID+\"hello world\");\r\n                }else{\r\n\r\n                    if(block.boothList[block.boothList.length-1].boothType!= booth.boothType){\r\n                        block.boothList.push(booth);\r\n\r\n                        const index = boothList.indexOf(booth);\r\n                        if (index > -1) {\r\n                            boothList.splice(index, 1);\r\n                        }\r\n                        block.unusedSpace-=booth.length;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            if(block.unusedSpace < 1){\r\n                break;\r\n            }\r\n        }else if(block.unusedSpace>0){\r\n            continue;\r\n        }else{\r\n            break;\r\n        }\r\n    }\r\n\r\n        for(var i =0; i< block.boothList.length; i++){   //remove those booth that has been allocated\r\n            const index = boothListcopy.indexOf(block.boothList[i]);\r\n            if (index > -1) {\r\n                boothListcopy.splice(index, 1);\r\n            }\r\n            //console.log(boothListcopy.length);\r\n        }\r\n\r\n        checkBlockOccupied(block,boothList,boothListcopy);\r\n\r\n}\r\n\r\nexport function runBlock2( block,  boothList, boothListcopy){\r\n    \r\n    if(boothList.length==0|boothListcopy==0){\r\n        //console.log('all booths allocated successfully');\r\n        return \"all booths allocated successfully\";\r\n    }\r\n\r\n    for(var i=0;i<boothListcopy.length;i++){\r\n        var booth = boothListcopy[i];\r\n        \r\n        if (block.unusedSpace >= booth.length) {\r\n            if (booth.width<=block.width) {\r\n                if(block.boothList.length==0) {\r\n                    block.boothList.push(booth);\r\n                    const index = boothList.indexOf(booth);\r\n                    if (index > -1) {\r\n                        boothList.splice(index, 1);\r\n                    }\r\n                    block.unusedSpace -= booth.length;\r\n                    \r\n                }else{\r\n                    if(block.boothList[block.boothList.length-1].boothType!= booth.boothType){\r\n                        block.boothList.push(booth);\r\n\r\n                        const index = boothList.indexOf(booth);\r\n                        if (index > -1) {\r\n                            boothList.splice(index, 1);\r\n                        }\r\n\r\n                        block.unusedSpace-=booth.length;\r\n                    }\r\n                }\r\n             \r\n            }\r\n            if(block.unusedSpace <= 0){\r\n                break;\r\n            }\r\n        }else if(block.unusedSpace>0){\r\n            continue;\r\n        }else{\r\n            break;\r\n        }\r\n    }\r\n\r\n    for(var i =0; i< block.boothList.length; i++){   //remove those booth that has been allocated\r\n        const index = boothListcopy.indexOf(block.boothList[i]);\r\n        if (index > -1) {\r\n            boothListcopy.splice(index, 1);\r\n        }\r\n        //console.log(boothListcopy.length);\r\n    }\r\n    \r\n    return checkBlockOccupied(block,boothList,boothListcopy);\r\n\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass DisplayBox extends Component{\r\n    render(){\r\n        const{value} = this.props;\r\n        return(\r\n            <div>\r\n            <label htmlFor=\"text\">\r\n                {value || \" test \"}\r\n            </label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DisplayBox;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport Level2 from './components/pages/Level2';\nimport tryme from './components/pages/tryme';\nimport floorplan from './components/pages/floorplan.png';\nimport styled from 'styled-components';\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\nimport * as algo from './algorithm';\nimport DisplayBox from './DisplayBox';\nimport Modal from \"./Modal\";\n\n// uuid is for generating id's\nimport * as uuid from 'uuid';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isOpen: false,\n      dataLoaded: false,\n      isFormInvalid: false,\n      rows: null,\n      cols: null,\n      testbooth1 : [],\n      testbooth2 : [],\n      show: false,\n      header: \"Block1\",\n      footer: \"\",\n      desc: \"Booth1(project_name,tyoe,width,length,ID)\"\n    }\n    this.fileHandler = this.fileHandler.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.openFileBrowser = this.openFileBrowser.bind(this);\n    this.renderFile = this.renderFile.bind(this);\n    this.fileInput = React.createRef();\n    this.boothList = [];\n    this.boothListCopy = [];\n    this.blockList = [];\n\n  }\n  \n\n  renderFile = (fileObj) => {\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if(err){\n        console.log(err);            \n      }\n      else{\n        this.setState({\n          dataLoaded: true,\n          cols: resp.cols,\n          rows: resp.rows\n        });\n        for (var i = 0; i<this.state.rows.length; i++){\n          var Booth = new algo.Booth(this.state.rows[i][0], this.state.rows[i][1], this.state.rows[i][3], this.state.rows[i][6], this.state.rows[i][7]);\n          this.boothList.push(Booth);\n          this.boothListCopy.push(Booth);\n        }\n        var block1 = new algo.Block(1);\n        var block2 = new algo.Block(2);\n\n        this.blockList.push(block1);\n        this.blockList.push(block2);\n      }\n    }); \n}\n\nfileHandler = (event) => {    \n  if(event.target.files.length){\n    let fileObj = event.target.files[0];\n    let fileName = fileObj.name;\n\n    \n    //check for file extension and pass only if it is .xlsx and display error message otherwise\n    if(fileName.slice(fileName.lastIndexOf('.')+1) === \"xlsx\"){\n      this.setState({\n        uploadedFileName: fileName,\n        isFormInvalid: false\n      });\n      this.renderFile(fileObj)\n    }    \n    else{\n      this.setState({\n        isFormInvalid: true,\n        uploadedFileName: \"\"\n      })\n    }\n  }               \n}\n\nonClickHandler = () => {\n  algo.runAlgo(this.blockList,this.boothList,this.boothListCopy);\n  var booth1list = [];\n  var booth2list = [];\n  console.log(this.blockList[0].boothList.length);\n  for (var i = 0; i<this.blockList[0].boothList.length; i++){\n    booth1list.push(this.blockList[0].boothList[i].projectName)\n  }\n  for (var i = 0; i<this.blockList[1].boothList.length; i++){\n    booth2list.push(this.blockList[1].boothList[i].projectName)\n  }\n  this.setState({testbooth1 : booth1list});\n  this.setState({testbooth2 : booth2list});\n  console.log(this.blockList[0].boothList[0].projectName);\n}\n\ntoggle() {\n  this.setState({\n    isOpen: !this.state.isOpen\n  });\n}\n\nopenFileBrowser = () => {\n  this.fileInput.current.click();\n}\n\nshowModal = () => {\n  this.setState({ show: true });\n};\n\nhideModal = () => {\n  this.setState({ show: false });\n};\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className= \"container\">\n            <Header/>\n            <Route exact path=\"/50.003-FrontEnd\" render={props => (\n              <React.Fragment>\n                <img src={floorplan} \n                className=\"Floorplan\" \n                alt=\"floorplan\"\n                style={{width: 800, height: 500}}/>\n                <div>\n                <input type=\"file\" onChange={this.fileHandler.bind(this)} style={{\"padding\":\"10px\"}}/>\n                <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Run Algo</button> \n                </div>\n                {this.state.dataLoaded && \n                <div>\n                  <div>\n                  <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" />\n                  </div>\n                </div>}\n                <box component=\"span\" m={1}>\n                  <label>Block 1 = </label><DisplayBox value={this.state.testbooth1} />\n                  <label>Block 2 = </label><DisplayBox value={this.state.testbooth2} />\n                </box>\n              </React.Fragment>\n              \n            )} />\n\n\n            <Route path=\"/level2\" component={Level2} />\n            <Route exact path=\"/tryme\" render={props => (\n              <React.Fragment>\n                <div>\n                  <h1>React Modal</h1>\n                  <Modal show={this.state.show} handleClose={this.hideModal} header={this.state.header} footer={this.state.footer} desc={this.state.desc}>\n\n                  </Modal>\n\n                  <button type=\"button\" onClick={this.showModal}>\n                    open\n                  </button>\n                </div>\n              </React.Fragment>\n\n            )} />\n\n            \n          </div>\n        </div>\n      </Router>\n    );\n  }\n}  \n\nconst HoverText = styled.p\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}